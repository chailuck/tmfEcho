---
# Source: partymanagement/templates/postgresql_secret.yaml
apiVersion: v1
data:
  POSTGRES_PASSWORD: YWRtaW4xMjM=
  POSTGRES_USER: cG9zdGdyZXNhZG1pbg==
kind: Secret
metadata:
  creationTimestamp: null
  name: postgres-secret
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: test
    meta.helm.sh/release-namespace: default
---
# Source: partymanagement/templates/postgresql_config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
data:
  postgresql.conf: |
    max_connections = 100
    shared_buffers = 256MB
    log_statement = 'all'
---
# Source: partymanagement/templates/postgresql_pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
spec:
  capacity:
    storage: 5Gi
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /docker/tmf632/PostgreSQL
---
# Source: partymanagement/templates/postgresql_pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  volumeName: postgres-pv
---
# Source: partymanagement/templates/TMF632_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: odapoc-tmf632-service
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
spec:
  type: ClusterIP
  clusterIP: 10.101.100.10
  selector:
    name: test-tmf632poc
  ports:
  - protocol: TCP
    port: 8082
    targetPort: 8082
---
# Source: partymanagement/templates/postgresql_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
spec:
  type: ClusterIP
  clusterIP: 10.101.100.9
  selector:
    run: postgres
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
---
# Source: partymanagement/templates/TMF632_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-tmf632poc
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
spec:
  replicas: 1
  selector:
    matchLabels:
      name: test-tmf632poc
  template:
    metadata:
      labels:
        name: test-tmf632poc
    spec:
      containers:
      - name: test-tmf632poc
        image: chailuck/tmfecho:v3
        ports:
        - containerPort: 8082
        volumeMounts:
        - name: default-config
          mountPath: /build/configs
          readOnly: true
      volumes:
      - name: default-config
        configMap:
          name: default-config
---
# Source: partymanagement/templates/postgresql_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
spec:
  replicas: 1
  selector:
    matchLabels:
      run: postgres
  template:
    metadata:
      labels:
        run: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-vol
      volumes:
        - name: postgres-vol
          persistentVolumeClaim:
            claimName: postgres-pvc
---
# Source: partymanagement/templates/TMF632_component.yaml
apiVersion: oda.tmforum.org/v1alpha4
kind: component
metadata:
  name: test-tmf632poc
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: test
    meta.helm.sh/release-namespace: default
spec:
  type: Party management
  functionalBlock: NOM
  publicationDate: 2024-11-30T00:00:00.000Z
  status: specified
  version: 0.0.1
  description: "POC Partymanagement with TMF632 ODA-Component from Open-API reference implementation."
  maintainers:
  - email: ChailucK@truecorp.co.th
    name: Chailuck K
  owners:
  - email: ChailucK@truecorp.co.th
    name: Chailuck K
  coreFunction:
    exposedAPIs: 
    - name: party-management-api
      implementation: test-partymanagmentapi
      apitype: openapi
      required: true
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF632_v5.0.0.swagger.json
      path: /test-tmf632poc/tmf-api/productInventory/v5
      developerUI: /test-tmf632poc/tmf-api/productInventory/v5/docs      
      port: 8082
    dependentAPIs: 
    - name: party
      apitype: openapi        
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF632_v5.0.0.swagger.json
  eventNotification:
    publishedEvents: []
    subscribedEvents: []
  managementFunction: 
    exposedAPIs: []
    dependentAPIs: []   
  security:
    controllerRole: Admin
    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
    partyrole:
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF669_PartyRole/master/TMF669-PartyRole-v4.0.0.swagger.json
      implementation: test-partyroleapi
      apitype: openapi
      path: /test-tmf632poc/tmf-api/partyRoleManagement/v4
      developerUI: /test-tmf632poc/tmf-api/partyRoleManagement/v4/docs
      port: 8080
---
# Source: partymanagement/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "test-partymanagement-test-connection"
  labels:
    helm.sh/chart: partymanagement-0.1.0
    app.kubernetes.io/name: partymanagement
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    oda.tmforum.org/componentName: test-tmf632poc
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['test-partymanagement:8082']
  restartPolicy: Never
