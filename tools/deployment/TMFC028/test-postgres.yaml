---
# Source: partymanagement/templates/postgresql_secret.yaml
apiVersion: v1
data:
  POSTGRES_PASSWORD: YWRtaW4xMjM=
  POSTGRES_USER: cG9zdGdyZXNhZG1pbg==
kind: Secret
metadata:
  creationTimestamp: null
  name: postgres-secret
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: test
    meta.helm.sh/release-namespace: default
---
# Source: partymanagement/templates/postgresql_config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
data:
  postgresql.conf: |
    max_connections = 100
    shared_buffers = 256MB
    log_statement = 'all'
---
# Source: partymanagement/templates/postgresql_pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
spec:
  capacity:
    storage: 5Gi
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /docker/tmf632/PostgreSQL
---
# Source: partymanagement/templates/postgresql_pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  volumeName: postgres-pv
---
# Source: partymanagement/templates/postgresql_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
spec:
  type: ClusterIP
  clusterIP: 10.101.100.9
  selector:
    run: postgres
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
---
# Source: partymanagement/templates/postgresql_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    oda.tmforum.org/componentName: test-tmf632poc
spec:
  replicas: 1
  selector:
    matchLabels:
      run: postgres
  template:
    metadata:
      labels:
        run: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16.4
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-vol
      volumes:
        - name: postgres-vol
          persistentVolumeClaim:
            claimName: postgres-pvc
---
